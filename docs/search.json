[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Workshop VDS 2023 Website",
    "section": "",
    "text": "You can also find the original code in the form of qmd files in the repository: Syntax.qmd, Survey.qmd, Vizualizations.qmd\nColab Links:\n\nSyntax: https://colab.research.google.com/drive/1d31zwTMKmWMbWLsJFyYLAkNaiYCumzwL?usp=sharing\nSurvey: https://colab.research.google.com/drive/1JIhzADRFq1UB9vevVnt_IhAzzJN3yqqu?usp=sharing\nVisualizations: https://colab.research.google.com/drive/1cvkNsDH2Eb0fQk6qpMxz70yMixMgXlcx?usp=sharing\n\n\nGithub Repo: ravinabanz/VDS-R-WorkShop-23"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Syntax.html",
    "href": "Syntax.html",
    "title": "Syntax",
    "section": "",
    "text": "# This is a comment. Comments in R start with a \"#\" symbol.\n\n# Assign a value to a variable\nx <- 10\n\n# Perform some basic arithmetic operations\ny <- x * 2\nz <- x + y\n\n# Print the value of a variable to the console\nprint(z)\n\n[1] 30\n\nprint(y+z)\n\n[1] 50\n\n\n\n# Define a function\nadd_two <- function(a, b) {\n  return(a + b)\n}\n\n# Call the function and print the result\nresult <- add_two(5, 3)\nprint(result)\n\n[1] 8\n\n\n\n# Define a for loop\nfor (i in 1:5) {\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n# Define an if statement\nif (x > y) {\n  print(\"x is greater than y\")\n} else {\n  print(\"x is not greater than y\")\n}\n\n[1] \"x is not greater than y\"\n\n\nComments: In R, comments are indicated by a “#” symbol. Anything following a “#” symbol on a line is treated as a comment and is ignored by the R interpreter.\nData types: R has a number of built-in data types, including character strings, integers, and floating-point numbers. R also has a special data type called a “vector” that can be used to store a sequence of values.\nVariables: Variables are used to store values in R. Variables are memory locations that store values during the execution of a computer program. To define a variable in R, we use the reverse-arrow(<-) operator.\nOperators: R has a number of operators that can be used to perform calculations and compare values. These include arithmetic operators such as “+”, “-”, “*”, and”/“, and logical operators such as”==” (equal to) and “!=” (not equal to).\nFunctions: Functions are used to perform specific tasks in R. To call a function, you use the function name followed by parentheses.\n\nif (!require(pacman)) install.packages(\"pacman\")\n\npacman::p_load(\"tidyverse\")\n\n\ndf <- read.csv(\"hotel_bookings.csv\")\nhead(df)\n\n         hotel is_canceled lead_time arrival_date_year arrival_date_month\n1 Resort Hotel           0       342              2015               July\n2 Resort Hotel           0       737              2015               July\n3 Resort Hotel           0         7              2015               July\n4 Resort Hotel           0        13              2015               July\n5 Resort Hotel           0        14              2015               July\n6 Resort Hotel           0        14              2015               July\n  arrival_date_week_number arrival_date_day_of_month stays_in_weekend_nights\n1                       27                         1                       0\n2                       27                         1                       0\n3                       27                         1                       0\n4                       27                         1                       0\n5                       27                         1                       0\n6                       27                         1                       0\n  stays_in_week_nights adults children babies meal country market_segment\n1                    0      2        0      0   BB     PRT         Direct\n2                    0      2        0      0   BB     PRT         Direct\n3                    1      1        0      0   BB     GBR         Direct\n4                    1      1        0      0   BB     GBR      Corporate\n5                    2      2        0      0   BB     GBR      Online TA\n6                    2      2        0      0   BB     GBR      Online TA\n  distribution_channel is_repeated_guest previous_cancellations\n1               Direct                 0                      0\n2               Direct                 0                      0\n3               Direct                 0                      0\n4            Corporate                 0                      0\n5                TA/TO                 0                      0\n6                TA/TO                 0                      0\n  previous_bookings_not_canceled reserved_room_type assigned_room_type\n1                              0                  C                  C\n2                              0                  C                  C\n3                              0                  A                  C\n4                              0                  A                  A\n5                              0                  A                  A\n6                              0                  A                  A\n  booking_changes deposit_type agent company days_in_waiting_list customer_type\n1               3   No Deposit  NULL    NULL                    0     Transient\n2               4   No Deposit  NULL    NULL                    0     Transient\n3               0   No Deposit  NULL    NULL                    0     Transient\n4               0   No Deposit   304    NULL                    0     Transient\n5               0   No Deposit   240    NULL                    0     Transient\n6               0   No Deposit   240    NULL                    0     Transient\n  adr required_car_parking_spaces total_of_special_requests reservation_status\n1   0                           0                         0          Check-Out\n2   0                           0                         0          Check-Out\n3  75                           0                         0          Check-Out\n4  75                           0                         0          Check-Out\n5  98                           0                         1          Check-Out\n6  98                           0                         1          Check-Out\n  reservation_status_date\n1              2015-07-01\n2              2015-07-01\n3              2015-07-02\n4              2015-07-02\n5              2015-07-03\n6              2015-07-03\n\n\n\nsummary(df)\n\n    hotel            is_canceled       lead_time   arrival_date_year\n Length:119390      Min.   :0.0000   Min.   :  0   Min.   :2015     \n Class :character   1st Qu.:0.0000   1st Qu.: 18   1st Qu.:2016     \n Mode  :character   Median :0.0000   Median : 69   Median :2016     \n                    Mean   :0.3704   Mean   :104   Mean   :2016     \n                    3rd Qu.:1.0000   3rd Qu.:160   3rd Qu.:2017     \n                    Max.   :1.0000   Max.   :737   Max.   :2017     \n                                                                    \n arrival_date_month arrival_date_week_number arrival_date_day_of_month\n Length:119390      Min.   : 1.00            Min.   : 1.0             \n Class :character   1st Qu.:16.00            1st Qu.: 8.0             \n Mode  :character   Median :28.00            Median :16.0             \n                    Mean   :27.17            Mean   :15.8             \n                    3rd Qu.:38.00            3rd Qu.:23.0             \n                    Max.   :53.00            Max.   :31.0             \n                                                                      \n stays_in_weekend_nights stays_in_week_nights     adults      \n Min.   : 0.0000         Min.   : 0.0         Min.   : 0.000  \n 1st Qu.: 0.0000         1st Qu.: 1.0         1st Qu.: 2.000  \n Median : 1.0000         Median : 2.0         Median : 2.000  \n Mean   : 0.9276         Mean   : 2.5         Mean   : 1.856  \n 3rd Qu.: 2.0000         3rd Qu.: 3.0         3rd Qu.: 2.000  \n Max.   :19.0000         Max.   :50.0         Max.   :55.000  \n                                                              \n    children           babies              meal             country         \n Min.   : 0.0000   Min.   : 0.000000   Length:119390      Length:119390     \n 1st Qu.: 0.0000   1st Qu.: 0.000000   Class :character   Class :character  \n Median : 0.0000   Median : 0.000000   Mode  :character   Mode  :character  \n Mean   : 0.1039   Mean   : 0.007949                                        \n 3rd Qu.: 0.0000   3rd Qu.: 0.000000                                        \n Max.   :10.0000   Max.   :10.000000                                        \n NA's   :4                                                                  \n market_segment     distribution_channel is_repeated_guest\n Length:119390      Length:119390        Min.   :0.00000  \n Class :character   Class :character     1st Qu.:0.00000  \n Mode  :character   Mode  :character     Median :0.00000  \n                                         Mean   :0.03191  \n                                         3rd Qu.:0.00000  \n                                         Max.   :1.00000  \n                                                          \n previous_cancellations previous_bookings_not_canceled reserved_room_type\n Min.   : 0.00000       Min.   : 0.0000                Length:119390     \n 1st Qu.: 0.00000       1st Qu.: 0.0000                Class :character  \n Median : 0.00000       Median : 0.0000                Mode  :character  \n Mean   : 0.08712       Mean   : 0.1371                                  \n 3rd Qu.: 0.00000       3rd Qu.: 0.0000                                  \n Max.   :26.00000       Max.   :72.0000                                  \n                                                                         \n assigned_room_type booking_changes   deposit_type          agent          \n Length:119390      Min.   : 0.0000   Length:119390      Length:119390     \n Class :character   1st Qu.: 0.0000   Class :character   Class :character  \n Mode  :character   Median : 0.0000   Mode  :character   Mode  :character  \n                    Mean   : 0.2211                                        \n                    3rd Qu.: 0.0000                                        \n                    Max.   :21.0000                                        \n                                                                           \n   company          days_in_waiting_list customer_type           adr         \n Length:119390      Min.   :  0.000      Length:119390      Min.   :  -6.38  \n Class :character   1st Qu.:  0.000      Class :character   1st Qu.:  69.29  \n Mode  :character   Median :  0.000      Mode  :character   Median :  94.58  \n                    Mean   :  2.321                         Mean   : 101.83  \n                    3rd Qu.:  0.000                         3rd Qu.: 126.00  \n                    Max.   :391.000                         Max.   :5400.00  \n                                                                             \n required_car_parking_spaces total_of_special_requests reservation_status\n Min.   :0.00000             Min.   :0.0000            Length:119390     \n 1st Qu.:0.00000             1st Qu.:0.0000            Class :character  \n Median :0.00000             Median :0.0000            Mode  :character  \n Mean   :0.06252             Mean   :0.5714                              \n 3rd Qu.:0.00000             3rd Qu.:1.0000                              \n Max.   :8.00000             Max.   :5.0000                              \n                                                                         \n reservation_status_date\n Length:119390          \n Class :character       \n Mode  :character       \n                        \n                        \n                        \n                        \n\n\n\nstr(df)\n\n'data.frame':   119390 obs. of  32 variables:\n $ hotel                         : chr  \"Resort Hotel\" \"Resort Hotel\" \"Resort Hotel\" \"Resort Hotel\" ...\n $ is_canceled                   : int  0 0 0 0 0 0 0 0 1 1 ...\n $ lead_time                     : int  342 737 7 13 14 14 0 9 85 75 ...\n $ arrival_date_year             : int  2015 2015 2015 2015 2015 2015 2015 2015 2015 2015 ...\n $ arrival_date_month            : chr  \"July\" \"July\" \"July\" \"July\" ...\n $ arrival_date_week_number      : int  27 27 27 27 27 27 27 27 27 27 ...\n $ arrival_date_day_of_month     : int  1 1 1 1 1 1 1 1 1 1 ...\n $ stays_in_weekend_nights       : int  0 0 0 0 0 0 0 0 0 0 ...\n $ stays_in_week_nights          : int  0 0 1 1 2 2 2 2 3 3 ...\n $ adults                        : int  2 2 1 1 2 2 2 2 2 2 ...\n $ children                      : int  0 0 0 0 0 0 0 0 0 0 ...\n $ babies                        : int  0 0 0 0 0 0 0 0 0 0 ...\n $ meal                          : chr  \"BB\" \"BB\" \"BB\" \"BB\" ...\n $ country                       : chr  \"PRT\" \"PRT\" \"GBR\" \"GBR\" ...\n $ market_segment                : chr  \"Direct\" \"Direct\" \"Direct\" \"Corporate\" ...\n $ distribution_channel          : chr  \"Direct\" \"Direct\" \"Direct\" \"Corporate\" ...\n $ is_repeated_guest             : int  0 0 0 0 0 0 0 0 0 0 ...\n $ previous_cancellations        : int  0 0 0 0 0 0 0 0 0 0 ...\n $ previous_bookings_not_canceled: int  0 0 0 0 0 0 0 0 0 0 ...\n $ reserved_room_type            : chr  \"C\" \"C\" \"A\" \"A\" ...\n $ assigned_room_type            : chr  \"C\" \"C\" \"C\" \"A\" ...\n $ booking_changes               : int  3 4 0 0 0 0 0 0 0 0 ...\n $ deposit_type                  : chr  \"No Deposit\" \"No Deposit\" \"No Deposit\" \"No Deposit\" ...\n $ agent                         : chr  \"NULL\" \"NULL\" \"NULL\" \"304\" ...\n $ company                       : chr  \"NULL\" \"NULL\" \"NULL\" \"NULL\" ...\n $ days_in_waiting_list          : int  0 0 0 0 0 0 0 0 0 0 ...\n $ customer_type                 : chr  \"Transient\" \"Transient\" \"Transient\" \"Transient\" ...\n $ adr                           : num  0 0 75 75 98 ...\n $ required_car_parking_spaces   : int  0 0 0 0 0 0 0 0 0 0 ...\n $ total_of_special_requests     : int  0 0 0 0 1 1 0 1 1 0 ...\n $ reservation_status            : chr  \"Check-Out\" \"Check-Out\" \"Check-Out\" \"Check-Out\" ...\n $ reservation_status_date       : chr  \"2015-07-01\" \"2015-07-01\" \"2015-07-02\" \"2015-07-02\" ...\n\n\n\ndf %>%\n  group_by(hotel) %>%\n  count()\n\n# A tibble: 2 × 2\n# Groups:   hotel [2]\n  hotel            n\n  <chr>        <int>\n1 City Hotel   79330\n2 Resort Hotel 40060\n\n\n\ndf %>%\n  group_by(hotel) %>%\n  count() %>%\n  rename(\"Number of Bookings\" = \"n\")\n\n# A tibble: 2 × 2\n# Groups:   hotel [2]\n  hotel        `Number of Bookings`\n  <chr>                       <int>\n1 City Hotel                  79330\n2 Resort Hotel                40060"
  },
  {
    "objectID": "Survey.html",
    "href": "Survey.html",
    "title": "Survey",
    "section": "",
    "text": "Loading in the dataset\n\n\nCode\ndf <- read_csv(\"R Workshop Survey.csv\")\n\nhead(df)\n\n\n# A tibble: 6 × 4\n  Timestamp                  Username               How often do you e…¹ What …²\n  <chr>                      <chr>                  <chr>                <chr>  \n1 2023/02/21 12:19:20 PM AST mkamarapu@umass.edu    Rarely               Public…\n2 2023/02/21 12:19:29 PM AST mkamarapu@umass.edu    Sometimes            Public…\n3 2023/02/21 12:19:36 PM AST mkamarapu@umass.edu    Never                Walking\n4 2023/02/21 12:19:48 PM AST mkamarapu@umass.edu    Rarely               Other  \n5 2023/02/21 12:59:02 PM AST niyatisharma@umass.edu Rarely               Walking\n6 2023/02/21 12:59:15 PM AST niyatisharma@umass.edu Sometimes            Driving\n# … with abbreviated variable names ¹​`How often do you exercise?`,\n#   ²​`What is your primary mode of transportation to work?`\n\n\n\n\nViz 1\n\n\nCode\nA <- df %>%\n  group_by(`How often do you exercise?`) %>%\n  count() %>%\n  ggplot(aes(y = n, x = `How often do you exercise?`, fill = `How often do you exercise?`)) + \n  geom_bar(position = \"dodge\", stat = \"identity\") +\n  ggtitle(\"How often do you exercise?\") +\n  xlab(\"Frequency on weekly basis\") +\n  ylab(\"Count\") +\n  theme_classic() +\n  guides(fill = \"none\")\nggplotly(A)\n\n\n\n\n\nFigure 1: Frequency count of Each Category\n\n\n\n\n\nViz 2\n\n\nCode\ndf %>% \n  group_by(`What is your primary mode of transportation to work?`) %>%\n  count() %>% \n  ggplot(aes(x = \"\", y = n, fill = as.factor(`What is your primary mode of transportation to work?`))) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\", start = 0) +\n  labs(title = \"What is your primary mode of transportation to work?\") +\n  scale_fill_viridis_d() +\n  theme_void() +\n  geom_text(aes(label = paste0(round((n/sum(n))*100), \"%\")), position = position_stack(vjust = 0.5)) +\n  guides(fill = guide_legend(title = \"Transportation way\"))\n\n\n\n\n\nFigure 2: Showing percentage of people using a particular transport"
  },
  {
    "objectID": "Visualizations.html",
    "href": "Visualizations.html",
    "title": "Visualizations",
    "section": "",
    "text": "Viz 1\nWith Figure 1 we explore relplot (relation plot) by using scatter chart to explore how the relationship between GDP and Life Expetancy has changed over the years.\n\n\nCode\n# Make a ggplot, but add frame=year: one image per year\nmyPlot <- ggplot(\n  gapminder, \n  aes(gdpPercap, lifeExp, size = pop, color = continent)\n  ) +\n  geom_point() +\n  scale_x_log10() +\n  theme_bw() +\n  # gganimate specific bits:\n  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +\n  transition_time(year) +\n  ease_aes('linear')\n\n# Save as gif:\ngganimate::animate(\n  myPlot,\n  duration = 5, \n  fps = 20,\n  width = 600,\n  height = 300,\n  renderer = gifski_renderer()\n  )\nanim_save(\"271-ggplot2-animated-gif-chart-with-gganimate1.gif\")\n\n\n\n\n\nFigure 1: Relationship between life expectancy and GDP from the year 1952 to 2007\n\n\n\n\n\n\nViz 2\nWe can also plot using 3 axes (Figure 2 ) for datasets where all three points (x, y and z) represent only one value.\n\n\nCode\n# Data: volcano is provided by plotly\n\n# Plot\np <- plot_ly(z = volcano, type = \"surface\")\np \n\n\n\n\n\nFigure 2: Maunga Whau (Mt Eden) is one of about 50 volcanos in the Auckland volcanic field. This data set gives topographic information for Maunga Whau on a 10m by 10m grid.\n\n\n\n\n\nViz 3\nHere is an example showing the distribution of the night price of AirBnB appartements in the south of France. Price range is divided per 10 euros interval. For example, there are slightly less than 750 appartements with a night price between 100 and 110 euros:\n\n\nCode\n# Load dataset from github\ndata <- read.table(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv\", header=TRUE)\n\nsummary(data)\n\n\n     price        \n Min.   :   11.0  \n 1st Qu.:   69.0  \n Median :  103.0  \n Mean   :  179.4  \n 3rd Qu.:  172.0  \n Max.   :17242.0  \n\n\nsource: holtzy/data_to_viz\nNow on the basis of this we can plot a histogram to see how often a particular price occurs in the dataset (while ignoring the outliers) Figure 3.\n\n\nCode\n# Plotting the dataset\np <- data %>%\n  filter( (price >= 69) & (price <= 172) ) %>% # Let's keep it between the 1st and                                                # 3rd quartile \n  ggplot( aes(x=price)) +\n    geom_histogram( binwidth=10, fill=\"#69b3a2\", color=\"#e9ecef\", alpha=0.9) +\n    ggtitle(\"Bin size = 10\") +\n    theme_ipsum() +\n    theme(\n      plot.title = element_text(size=15)\n    )\nggplotly(p)\n\n\n\n\n\nFigure 3: Frequency count to check bnbs avaiable at different price points in South of France\n\n\n\n\n\nViz 4\nPie Chart is also something which is very useful to show per cent of the whole. In the visualization below (Figure 4 ) we create a Mock Dataset with labels: Massachusetts, New york, California, and Texas.\n\n\nCode\n#Creating the Dataset\nx <- c(59, 62, 58, 282)\nlabels <-  c(\"Massachusetts\",\"New York\",\"Calfornia\",\"Texas\")\n\n#Calculation Percentage\npiepercent<- round(100*x/sum(x), 1) # Round up is a good practice as it helps in                                       # keeping the significance level constant                                          # throughout a project\n\n# Plotting the chart\npie(\n  x,\n  labels = piepercent,\n  main = \"City pie chart\",\n  col = rainbow(length(x))\n  )\n# Specifying the legend\nlegend(\n  \"topright\", \n  c(\"Massachusetts\",\"New York\",\"Calfornia\",\"Texas\"),\n  cex = 0.8,\n  fill = rainbow(length(x))\n  )\n\n\n\n\n\nFigure 4: Pie Chart showing percentage of each category"
  },
  {
    "objectID": "Challenges/challenge1.html",
    "href": "Challenges/challenge1.html",
    "title": "Challenge 1 Instructions",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "Challenges/challenge1.html#challenge-overview",
    "href": "Challenges/challenge1.html#challenge-overview",
    "title": "Challenge 1 Instructions",
    "section": "Challenge Overview",
    "text": "Challenge Overview\nToday’s challenge is to\n\nread in a dataset, and\ndescribe the dataset using both words and any supporting information (e.g., tables, etc)"
  },
  {
    "objectID": "Challenges/challenge1.html#read-in-the-data",
    "href": "Challenges/challenge1.html#read-in-the-data",
    "title": "Challenge 1 Instructions",
    "section": "Read in the Data",
    "text": "Read in the Data\nRead the following data set, using the correct R package and command.\n\nbirds.csv\n\n\n\n\nAdd any comments or documentation as needed."
  },
  {
    "objectID": "Challenges/challenge1.html#describe-the-data",
    "href": "Challenges/challenge1.html#describe-the-data",
    "title": "Challenge 1 Instructions",
    "section": "Describe the data",
    "text": "Describe the data\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data)."
  },
  {
    "objectID": "Challenges/challenge2.html",
    "href": "Challenges/challenge2.html",
    "title": "Challenge 2",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)"
  },
  {
    "objectID": "Challenges/challenge2.html#challenge-overview",
    "href": "Challenges/challenge2.html#challenge-overview",
    "title": "Challenge 2",
    "section": "Challenge Overview",
    "text": "Challenge Overview\nToday’s challenge is to\n\nread in a data set, and describe the data using both words and any supporting information (e.g., tables, etc)\nprovide summary statistics for different interesting groups within the data, and interpret those statistics\n\n\n\n\nAdd any comments or documentation as needed. More challenging data may require additional code chunks and documentation."
  },
  {
    "objectID": "Challenges/challenge2.html#describe-the-data",
    "href": "Challenges/challenge2.html#describe-the-data",
    "title": "Challenge 2",
    "section": "Describe the data",
    "text": "Describe the data\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables."
  },
  {
    "objectID": "Challenges/challenge2.html#provide-grouped-summary-statistics",
    "href": "Challenges/challenge2.html#provide-grouped-summary-statistics",
    "title": "Challenge 2",
    "section": "Provide Grouped Summary Statistics",
    "text": "Provide Grouped Summary Statistics\nConduct some exploratory data analysis, using dplyr commands such as group_by(), select(), filter(), and summarise(). Find the central tendency (mean, median, mode) and dispersion (standard deviation, mix/max/quantile) for different subgroups within the data set."
  }
]